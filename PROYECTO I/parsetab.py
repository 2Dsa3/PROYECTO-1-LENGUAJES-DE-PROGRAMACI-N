
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND AS ASSIGN BLOCK_COMMENT BOOL BREAK CLASS COLON COMMA COMPOSED_ASSIGN CONST CONTINUE DECREMENT DIVIDE DO DOC_COMMENT DOT DOUBLE ELSE EQUALS EXTENDS FALSE FINAL FLOAT FOR GRAPH GREATER_EQ GREATER_THAN HASH IF IMPLEMENTS INCREMENT INTEGER INTEGER_DIVIDE INTERFACE IS IS_NOT LBRACE LESS_EQ LESS_THAN LINE_COMMENT LIST LPAREN LSQUARE MAP MINUS MODULE NEGATION NOT_EQUALS NULL NULL_ASSIGN NUMBER OR PLUS PRINT PRIVATE PROTECTED PUBLIC QUEUE RBRACE RPAREN RSQUARE SEMICOLON SET STACK STRING STRING_LITERAL TIMES TREE TRUE VARIABLE VOID WHILEasignacion : NUMBER operador NUMBERoperador : PLUS\n              | MINUS\n              | TIMES\n              | DIVIDE \n              | MODULE'
    
_lr_action_items = {'NUMBER':([0,3,4,5,6,7,8,],[2,9,-2,-3,-4,-5,-6,]),'$end':([1,9,],[0,-1,]),'PLUS':([2,],[4,]),'MINUS':([2,],[5,]),'TIMES':([2,],[6,]),'DIVIDE':([2,],[7,]),'MODULE':([2,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'asignacion':([0,],[1,]),'operador':([2,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> asignacion","S'",1,None,None,None),
  ('asignacion -> NUMBER operador NUMBER','asignacion',3,'p_asignacion','main.py',6),
  ('operador -> PLUS','operador',1,'p_operador','main.py',9),
  ('operador -> MINUS','operador',1,'p_operador','main.py',10),
  ('operador -> TIMES','operador',1,'p_operador','main.py',11),
  ('operador -> DIVIDE','operador',1,'p_operador','main.py',12),
  ('operador -> MODULE','operador',1,'p_operador','main.py',13),
]
